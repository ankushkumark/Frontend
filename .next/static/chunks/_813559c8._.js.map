{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/New/Frontend/my-app/src/components/ui/card.js"],"sourcesContent":["// src/components/ui/card.js\r\nexport function Card({ className = \"\", children, ...props }) {\r\n  return (\r\n    <div\r\n      className={`rounded-2xl bg-white shadow-sm border border-gray-200 ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardContent({ className = \"\", children, ...props }) {\r\n  return (\r\n    <div className={`p-6 ${className}`} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;;;;AACrB,SAAS,KAAK,KAAsC;QAAtC,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,GAAG,OAAO,GAAtC;IACnB,qBACE,6LAAC;QACC,WAAW,AAAC,yDAAkE,OAAV;QACnE,GAAG,KAAK;kBAER;;;;;;AAGP;KATgB;AAWT,SAAS,YAAY,KAAsC;QAAtC,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,GAAG,OAAO,GAAtC;IAC1B,qBACE,6LAAC;QAAI,WAAW,AAAC,OAAgB,OAAV;QAAc,GAAG,KAAK;kBAC1C;;;;;;AAGP;MANgB","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/New/Frontend/my-app/src/app/accounts/%5Bid%5D/page.js"],"sourcesContent":["\"use client\";\r\nimport { useParams, useSearchParams } from \"next/navigation\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\n\r\n// ‚úÖ Simple Modal for Editing Balance\r\nfunction EditModal({ isOpen, onClose, onSave }) {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [type, setType] = useState(\"Credit\");\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n      <div className=\"bg-white rounded-lg p-6 w-80 shadow-lg\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">Update Balance</h2>\r\n\r\n        {/* Amount Input */}\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Enter amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          className=\"w-full border rounded-md px-3 py-2 mb-3 text-sm\"\r\n        />\r\n\r\n        {/* Type Selector */}\r\n        <select\r\n          value={type}\r\n          onChange={(e) => setType(e.target.value)}\r\n          className=\"w-full border rounded-md px-3 py-2 mb-4 text-sm\"\r\n        >\r\n          <option value=\"Credit\">Credit</option>\r\n          <option value=\"Debit\">Debit</option>\r\n        </select>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex justify-end gap-3\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 rounded-md text-sm bg-gray-200 hover:bg-gray-300\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              if (!amount) return;\r\n              onSave({ amount: parseFloat(amount), type });\r\n              setAmount(\"\");\r\n              setType(\"Credit\");\r\n            }}\r\n            className=\"px-4 py-2 rounded-md text-sm bg-teal-600 text-white hover:bg-teal-700\"\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function AccountDetailsPage() {\r\n  const params = useParams();\r\n  const searchParams = useSearchParams();\r\n\r\n  const accountId = params.id; // ‚úÖ from dynamic route\r\n  const userEmail = searchParams.get(\"email\"); // ‚úÖ query param (pass from AccountsPage)\r\n\r\n  const [account, setAccount] = useState(null);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // üîÑ Fetch account + transactions\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // ‚úÖ 1. Fetch single account\r\n        const accRes = await fetch(\r\n          `http://localhost:5000/api/accounts/id/${accountId}`\r\n        );\r\n        if (!accRes.ok) throw new Error(\"Account not found\");\r\n        const accData = await accRes.json();\r\n        setAccount(accData);\r\n\r\n        // ‚úÖ 2. Fetch transactions by email\r\n        if (userEmail) {\r\n          const txRes = await fetch(\r\n            `http://localhost:5000/api/accounts/user/${userEmail}/transactions`\r\n          );\r\n          if (txRes.ok) {\r\n            const txData = await txRes.json();\r\n            setTransactions(txData);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(\"‚ùå Error fetching account:\", err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [accountId, userEmail]);\r\n\r\n  // üíæ Save updated balance + transaction\r\n  const handleSave = async ({ amount, type }) => {\r\n    try {\r\n      const res = await fetch(\r\n        `http://localhost:5000/api/accounts/${accountId}/transaction`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ amount, type }),\r\n        }\r\n      );\r\n\r\n      if (res.ok) {\r\n        const updated = await res.json();\r\n        setAccount(updated); // update account balance\r\n        setTransactions(updated.transactions || []); // update transactions list\r\n        setIsModalOpen(false);\r\n      } else {\r\n        console.error(\"‚ö†Ô∏è Failed to save transaction\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"‚ùå Error saving transaction:\", err);\r\n    }\r\n  };\r\n\r\n  if (!account) return <p className=\"p-6\">Loading...</p>;\r\n\r\n  return (\r\n    <div className=\"p-4 sm:p-6 lg:p-8 space-y-6\">\r\n      {/* Account Card */}\r\n      <Card className=\"rounded-xl shadow-md\">\r\n        <CardContent\r\n          className={`rounded-t-xl p-5 text-white ${account.color || \"bg-teal-600\"}`}\r\n        >\r\n          <h3 className=\"text-lg font-semibold\">{account.type}</h3>\r\n          <p className=\"text-sm\">{account.number}</p>\r\n          <p className=\"text-xl font-bold mt-2\">${account.balance}</p>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Edit Button */}\r\n      <button\r\n        onClick={() => setIsModalOpen(true)}\r\n        className=\"bg-teal-600 text-white px-5 py-2 rounded-md text-sm hover:bg-teal-700 transition\"\r\n      >\r\n        Edit Details\r\n      </button>\r\n\r\n      {/* Transactions History */}\r\n      {transactions.length > 0 ? (\r\n        <div className=\"bg-white rounded-lg shadow-md p-4\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\r\n            Transactions History\r\n          </h2>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full text-sm text-left border\">\r\n              <thead className=\"bg-gray-100 text-gray-700\">\r\n                <tr>\r\n                  <th className=\"px-4 py-2 border\">Date</th>\r\n                  <th className=\"px-4 py-2 border\">Type</th>\r\n                  <th className=\"px-4 py-2 border\">Status</th>\r\n                  <th className=\"px-4 py-2 border\">Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {transactions.map((txn, i) => (\r\n                  <tr key={i} className=\"border-t\">\r\n                    <td className=\"px-4 py-2\">\r\n                      {new Date(txn.date).toLocaleDateString()}\r\n                    </td>\r\n                    <td className=\"px-4 py-2\">{txn.type}</td>\r\n                    <td className=\"px-4 py-2\">{txn.status}</td>\r\n                    <td className=\"px-4 py-2\">${txn.amount}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-gray-600\">No transactions yet.</p>\r\n      )}\r\n\r\n      {/* Modal */}\r\n      <EditModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onSave={handleSave}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;AAHA;;;;AAKA,qCAAqC;AACrC,SAAS,UAAU,KAA2B;QAA3B,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAA3B;;IACjB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,yKAAQ,EAAC;IACrC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAC;IAEjC,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA6B;;;;;;8BAG3C,6LAAC;oBACC,MAAK;oBACL,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;oBACzC,WAAU;;;;;;8BAIZ,6LAAC;oBACC,OAAO;oBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;oBACvC,WAAU;;sCAEV,6LAAC;4BAAO,OAAM;sCAAS;;;;;;sCACvB,6LAAC;4BAAO,OAAM;sCAAQ;;;;;;;;;;;;8BAIxB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,6LAAC;4BACC,SAAS;gCACP,IAAI,CAAC,QAAQ;gCACb,OAAO;oCAAE,QAAQ,WAAW;oCAAS;gCAAK;gCAC1C,UAAU;gCACV,QAAQ;4BACV;4BACA,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;GArDS;KAAA;AAuDM,SAAS;;IACtB,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,eAAe,IAAA,wJAAe;IAEpC,MAAM,YAAY,OAAO,EAAE,EAAE,uBAAuB;IACpD,MAAM,YAAY,aAAa,GAAG,CAAC,UAAU,yCAAyC;IAEtF,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,yKAAQ,EAAC,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,yKAAQ,EAAC;IAE/C,kCAAkC;IAClC,IAAA,0KAAS;wCAAC;YACR,MAAM;0DAAY;oBAChB,IAAI;wBACF,4BAA4B;wBAC5B,MAAM,SAAS,MAAM,MACnB,AAAC,yCAAkD,OAAV;wBAE3C,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,IAAI,MAAM;wBAChC,MAAM,UAAU,MAAM,OAAO,IAAI;wBACjC,WAAW;wBAEX,mCAAmC;wBACnC,IAAI,WAAW;4BACb,MAAM,QAAQ,MAAM,MAClB,AAAC,2CAAoD,OAAV,WAAU;4BAEvD,IAAI,MAAM,EAAE,EAAE;gCACZ,MAAM,SAAS,MAAM,MAAM,IAAI;gCAC/B,gBAAgB;4BAClB;wBACF;oBACF,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC,6BAA6B;oBAC7C;gBACF;;YACA;QACF;uCAAG;QAAC;QAAW;KAAU;IAEzB,wCAAwC;IACxC,MAAM,aAAa;YAAO,EAAE,MAAM,EAAE,IAAI,EAAE;QACxC,IAAI;YACF,MAAM,MAAM,MAAM,MAChB,AAAC,sCAA+C,OAAV,WAAU,iBAChD;gBACE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAQ;gBAAK;YACtC;YAGF,IAAI,IAAI,EAAE,EAAE;gBACV,MAAM,UAAU,MAAM,IAAI,IAAI;gBAC9B,WAAW,UAAU,yBAAyB;gBAC9C,gBAAgB,QAAQ,YAAY,IAAI,EAAE,GAAG,2BAA2B;gBACxE,eAAe;YACjB,OAAO;gBACL,QAAQ,KAAK,CAAC;YAChB;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;IAEA,IAAI,CAAC,SAAS,qBAAO,6LAAC;QAAE,WAAU;kBAAM;;;;;;IAExC,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,0IAAI;gBAAC,WAAU;0BACd,cAAA,6LAAC,iJAAW;oBACV,WAAW,AAAC,+BAA6D,OAA/B,QAAQ,KAAK,IAAI;;sCAE3D,6LAAC;4BAAG,WAAU;sCAAyB,QAAQ,IAAI;;;;;;sCACnD,6LAAC;4BAAE,WAAU;sCAAW,QAAQ,MAAM;;;;;;sCACtC,6LAAC;4BAAE,WAAU;;gCAAyB;gCAAE,QAAQ,OAAO;;;;;;;;;;;;;;;;;;0BAK3D,6LAAC;gBACC,SAAS,IAAM,eAAe;gBAC9B,WAAU;0BACX;;;;;;YAKA,aAAa,MAAM,GAAG,kBACrB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA2C;;;;;;kCAGzD,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAM,WAAU;;8CACf,6LAAC;oCAAM,WAAU;8CACf,cAAA,6LAAC;;0DACC,6LAAC;gDAAG,WAAU;0DAAmB;;;;;;0DACjC,6LAAC;gDAAG,WAAU;0DAAmB;;;;;;0DACjC,6LAAC;gDAAG,WAAU;0DAAmB;;;;;;0DACjC,6LAAC;gDAAG,WAAU;0DAAmB;;;;;;;;;;;;;;;;;8CAGrC,6LAAC;8CACE,aAAa,GAAG,CAAC,CAAC,KAAK,kBACtB,6LAAC;4CAAW,WAAU;;8DACpB,6LAAC;oDAAG,WAAU;8DACX,IAAI,KAAK,IAAI,IAAI,EAAE,kBAAkB;;;;;;8DAExC,6LAAC;oDAAG,WAAU;8DAAa,IAAI,IAAI;;;;;;8DACnC,6LAAC;oDAAG,WAAU;8DAAa,IAAI,MAAM;;;;;;8DACrC,6LAAC;oDAAG,WAAU;;wDAAY;wDAAE,IAAI,MAAM;;;;;;;;2CAN/B;;;;;;;;;;;;;;;;;;;;;;;;;;qCAcnB,6LAAC;gBAAE,WAAU;0BAAgB;;;;;;0BAI/B,6LAAC;gBACC,QAAQ;gBACR,SAAS,IAAM,eAAe;gBAC9B,QAAQ;;;;;;;;;;;;AAIhB;IAnIwB;;QACP,kJAAS;QACH,wJAAe;;;MAFd","debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/New/Frontend/my-app/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}