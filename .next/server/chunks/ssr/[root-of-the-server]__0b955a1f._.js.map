{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///E:/New/Frontend/my-app/src/app/expenses/linegraph/page.js"],"sourcesContent":["// \"use client\";\r\n// import Goals from \"@/components/dashboard/Goals\";\r\n// import {\r\n//   ComposedChart,\r\n//   Area,\r\n//   Line,\r\n//   XAxis,\r\n//   YAxis,\r\n//   Tooltip,\r\n//   ResponsiveContainer,\r\n//   CartesianGrid,\r\n// } from \"recharts\";\r\n// import {\r\n//   Home,\r\n//   Utensils,\r\n//   Bus,\r\n//   Film,\r\n//   ShoppingBag,\r\n//   Grid as GridIcon,\r\n//   ArrowUp,\r\n//   ArrowDown,\r\n// } from \"lucide-react\";\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// // âœ… Chart data\r\n// const data = [\r\n//   { date: \"May 01\", thisMonth: 4000, lastMonth: 2400 },\r\n//   { date: \"May 05\", thisMonth: 3200, lastMonth: 2800 },\r\n//   { date: \"May 10\", thisMonth: 2800, lastMonth: 3000 },\r\n//   { date: \"May 15\", thisMonth: 3600, lastMonth: 2600 },\r\n//   { date: \"May 20\", thisMonth: 3900, lastMonth: 2700 },\r\n//   { date: \"May 25\", thisMonth: 3700, lastMonth: 2500 },\r\n//   { date: \"May 30\", thisMonth: 4200, lastMonth: 2600 },\r\n// ];\r\n\r\n// // âœ… Static expense categories\r\n// const staticExpenses = [\r\n//   { id: 1, title: \"Housing\", amount: 0, percent: 15, isUp: true, icon: Home },\r\n//   { id: 2, title: \"Food\", amount: 0, percent: 8, isUp: false, icon: Utensils },\r\n//   { id: 3, title: \"Transportation\", amount: 0, percent: 12, isUp: false, icon: Bus },\r\n//   { id: 4, title: \"Entertainment\", amount: 0, percent: 15, isUp: false, icon: Film },\r\n//   { id: 5, title: \"Shopping\", amount: 0, percent: 25, isUp: true, icon: ShoppingBag },\r\n//   { id: 6, title: \"Others\", amount: 0, percent: 23, isUp: true, icon: GridIcon },\r\n// ];\r\n\r\n// export default function SavingSummary() {\r\n//   const [expenses, setExpenses] = useState([]);\r\n//   const [selectedItem, setSelectedItem] = useState(null);\r\n//   const [newAmount, setNewAmount] = useState(\"\");\r\n//   const [userId, setUserId] = useState(null);\r\n//   const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n\r\n//   // ðŸ”¹ Fetch user expenses from DB\r\n//   useEffect(() => {\r\n//     const id = localStorage.getItem(\"userId\");\r\n//     if (!id) return;\r\n//     setUserId(id);\r\n\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const res = await fetch(`http://localhost:5000/api/expenses/${id}`);\r\n//         if (!res.ok) throw new Error(\"Failed to fetch expenses\");\r\n//         const data = await res.json();\r\n//         setExpenses(data);\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching expenses:\", err);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   // ðŸ”¹ Match DB data with static categories\r\n//   const getExpenseData = (item) => {\r\n//     const found = expenses.find((e) => e.key === item.title);\r\n//     return {\r\n//       amount: found ? found.amount : item.amount,\r\n//       percent: item.percent,\r\n//       isUp: item.isUp,\r\n//     };\r\n//   };\r\n\r\n//   // ðŸ”¹ Save updated expense\r\n//   const handleSave = async () => {\r\n//     if (!userId || !selectedItem || !newAmount) return;\r\n\r\n//     try {\r\n//       const res = await fetch(\r\n//         `http://localhost:5000/api/expenses/${userId}/${selectedItem.title}`,\r\n//         {\r\n//           method: \"PUT\",\r\n//           headers: { \"Content-Type\": \"application/json\" },\r\n//           body: JSON.stringify({\r\n//             amount: Number(newAmount),\r\n//             date: new Date(),\r\n//           }),\r\n//         }\r\n//       );\r\n\r\n//       const updatedExpense = await res.json();\r\n\r\n//       setExpenses((prev) => {\r\n//         const filtered = prev.filter((e) => e.key !== selectedItem.title);\r\n//         return [updatedExpense, ...filtered];\r\n//       });\r\n\r\n//       setRefreshTrigger(Date.now());\r\n//       setSelectedItem(null);\r\n//       setNewAmount(\"\");\r\n//     } catch (err) {\r\n//       console.error(\"Error saving expense:\", err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-4 md:p-5 flex flex-col gap-6\">\r\n//       {/* Top Row: Goals + Saving Summary Chart */}\r\n//       <div className=\"flex flex-col lg:flex-row gap-4 w-full\">\r\n//         {/* Goals Card */}\r\n//         <div className=\"bg-white rounded-2xl shadow-md p-4 w-full lg:w-72\">\r\n//           <Goals />\r\n//         </div>\r\n\r\n//         {/* Chart Card */}\r\n//         <div className=\"bg-white rounded-2xl shadow-md p-4 w-full flex-1 h-80\">\r\n//           <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n//             <h2 className=\"font-inter sm:text-lg\">Saving Summary</h2>\r\n//           </div>\r\n\r\n//           <div className=\"mt-2 h-56 sm:h-64 lg:h-60 relative\">\r\n//             <div className=\"absolute right-2 top-[-30px] z-10 flex flex-wrap items-center gap-5 text-xs sm:text-sm\">\r\n//               <span className=\"flex items-center gap-2\">\r\n//                 <span className=\"inline-block w-3 sm:w-4 h-1.5 rounded bg-teal-600\" />\r\n//                 This month\r\n//               </span>\r\n//               <span className=\"flex items-center gap-2 text-gray-500\">\r\n//                 <span className=\"inline-block w-3 sm:w-4 h-1.5 rounded bg-gray-300\" />\r\n//                 Last month\r\n//               </span>\r\n//             </div>\r\n\r\n//             <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n//               <ComposedChart\r\n//                 data={data}\r\n//                 margin={{ top: 20, right: 20, left: 0, bottom: 0 }}\r\n//               >\r\n//                 <defs>\r\n//                   <linearGradient id=\"tealFill\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n//                     <stop offset=\"0%\" stopColor=\"#0f766e\" stopOpacity=\"0.6\" />\r\n//                     <stop offset=\"70%\" stopColor=\"#0f766e\" stopOpacity=\"0.25\" />\r\n//                     <stop offset=\"100%\" stopColor=\"#0f766e\" stopOpacity=\"0\" />\r\n//                   </linearGradient>\r\n//                 </defs>\r\n\r\n//                 <CartesianGrid\r\n//                   stroke=\"#e5e7eb\"\r\n//                   strokeDasharray=\"3 3\"\r\n//                   vertical={false}\r\n//                 />\r\n//                 <XAxis dataKey=\"date\" tickLine={false} axisLine={false} fontSize={10} />\r\n//                 <YAxis\r\n//                   domain={[0, \"dataMax + 1000\"]}\r\n//                   tickCount={5}\r\n//                   allowDecimals={false}\r\n//                   tickLine={false}\r\n//                   axisLine={false}\r\n//                   tickFormatter={(v) => `$${v}`}\r\n//                   fontSize={10}\r\n//                 />\r\n//                 <Tooltip\r\n//                   formatter={(v) => [`$${v}`, \"\"]}\r\n//                   contentStyle={{\r\n//                     borderRadius: 10,\r\n//                     border: \"none\",\r\n//                     boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n//                   }}\r\n//                 />\r\n//                 <Area\r\n//                   type=\"monotone\"\r\n//                   dataKey=\"thisMonth\"\r\n//                   stroke=\"#0f766e\"\r\n//                   strokeWidth={2}\r\n//                   fill=\"url(#tealFill)\"\r\n//                   dot={false}\r\n//                 />\r\n//                 <Line\r\n//                   type=\"monotone\"\r\n//                   dataKey=\"lastMonth\"\r\n//                   stroke=\"#94a3b8\"\r\n//                   strokeWidth={2}\r\n//                   strokeDasharray=\"5 6\"\r\n//                   dot={false}\r\n//                 />\r\n//               </ComposedChart>\r\n//             </ResponsiveContainer>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* âœ… Expenses Breakdown Section */}\r\n//       <div className=\"bg-white rounded-2xl shadow-md p-4 w-full\">\r\n//         <h2 className=\"font-inter sm:text-lg mb-3\">Expenses Breakdown</h2>\r\n//         <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3\">\r\n//           {staticExpenses.map((item) => {\r\n//             const Icon = item.icon;\r\n//             const data = getExpenseData(item);\r\n//             return (\r\n//               <div\r\n//                 key={item.id}\r\n//                 className=\"flex items-center justify-between bg-white border rounded-lg p-2 sm:p-4 cursor-pointer hover:bg-gray-50\"\r\n//                 onClick={() => setSelectedItem(item)}\r\n//               >\r\n//                 {/* Left */}\r\n//                 <div className=\"flex items-center gap-2 sm:gap-3\">\r\n//                   <div className=\"w-10 h-10 sm:w-12 sm:h-12 rounded-lg bg-gray-100 flex items-center justify-center text-gray-500\">\r\n//                     <Icon className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n//                   </div>\r\n//                   <div>\r\n//                     <p className=\"text-xs sm:text-sm text-gray-500 whitespace-nowrap\">\r\n//                       {item.title}\r\n//                     </p>\r\n//                     <p className=\"text-sm sm:text-lg font-semibold whitespace-nowrap\">\r\n//                       ${data.amount}\r\n//                     </p>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 {/* Right */}\r\n//                 <div className=\"flex flex-col items-end\">\r\n//                   <p\r\n//                     className={`flex items-center text-xs sm:text-sm font-medium ${\r\n//                       data.isUp ? \"text-red-500\" : \"text-green-500\"\r\n//                     }`}\r\n//                   >\r\n//                     {data.percent}%\r\n//                     {data.isUp ? (\r\n//                       <ArrowUp className=\"w-3 h-3 sm:w-4 sm:h-4 ml-1\" />\r\n//                     ) : (\r\n//                       <ArrowDown className=\"w-3 h-3 sm:w-4 sm:h-4 ml-1\" />\r\n//                     )}\r\n//                   </p>\r\n//                   <span className=\"text-gray-400 text-sm sm:text-base leading-none\">â†’</span>\r\n//                 </div>\r\n//               </div>\r\n//             );\r\n//           })}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* ðŸ”¹ Popup Modal */}\r\n//       {selectedItem && (\r\n//         <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\r\n//           <div className=\"bg-white rounded-2xl p-6 w-80 shadow-lg\">\r\n//             <h3 className=\"text-lg font-semibold mb-4\">\r\n//               Update Amount - {selectedItem.title}\r\n//             </h3>\r\n//             <p className=\"mb-2 text-sm text-gray-500\">\r\n//               Current: ${getExpenseData(selectedItem).amount}\r\n//             </p>\r\n//             <input\r\n//               type=\"number\"\r\n//               value={newAmount}\r\n//               onChange={(e) => setNewAmount(e.target.value)}\r\n//               placeholder=\"Enter new amount\"\r\n//               className=\"w-full border rounded-lg px-3 py-2 mb-4\"\r\n//             />\r\n//             <div className=\"flex justify-end gap-2\">\r\n//               <button\r\n//                 onClick={() => setSelectedItem(null)}\r\n//                 className=\"px-4 py-2 rounded-lg bg-gray-200\"\r\n//               >\r\n//                 Cancel\r\n//               </button>\r\n//               <button\r\n//                 onClick={handleSave}\r\n//                 className=\"px-4 py-2 rounded-lg bg-teal-600 text-white\"\r\n//               >\r\n//                 Save\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n"],"names":[],"mappings":"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","debugId":null}}]
}